{
  "title": "2014-12-03 Notes",
  "story": [
    {
      "type": "pagefold",
      "id": "293b88a0da0a1f30",
      "text": "Consolidated Issue Data"
    },
    {
      "type": "paragraph",
      "id": "b72b53dda6856d71",
      "text": "The first task today was to consolidate the different Issue data into one source. Currently we scrape policy data from the [[Public Whip]] pseudo-API, but then also have Richard's spreadsheet of extended information. [[stance-viewer-sinatra]] handles each of these separately, so we want to combine that into one source."
    },
    {
      "type": "paragraph",
      "id": "2a52ac2a2d381a58",
      "text": "To bootstrap that up, I'm having the new Issue API from yesterday simply read both when it's asked to serve them. We can then pre-fill those into the [[Bellagio Editor]]."
    },
    {
      "type": "paragraph",
      "id": "557cfd7ab3cf454f",
      "text": "Once we decide where that will actually *store* any data, we can combine them properly and have the API read from the store instead."
    },
    {
      "type": "paragraph",
      "id": "b90b3b0c74cafad7",
      "text": "This required tidying up how the CSV reading currently works, hand-editing my dump of the spreadsheet to have meaningful column names in the title row, so we can refer to them by name, rather than position number, merging these in the API call, and creating some tests for the API (which I should really have done yesterday)."
    },
    {
      "type": "paragraph",
      "id": "a7164d4e768c5a60",
      "text": "I also had a brief look at automatically populating the existing Indicators, but hit a couple of snags. Firstly the current Issues file only includes IDs, rather than titles. (We could fix this either by regenerating the file with more info, or add a call to use the Morph API to look that up.) Secondly, the jQuery to populate this part of the form assumes the user clicking buttons etc. We could probably simulate those clicks, but it would presumably be better to refactor that code first so that we could just call it from either approach. And finally, the current Indicator info — from either source — doesn't neatly tell us whether it should be attached as For/Against or Strong/Weak. Again, we could fix this, but this is a lot of fixes for something we're not sure we're going to use yet, and I think some of the other changes required over the next couple of days would make some of this better anyway. So I'm deferring this part for a while."
    },
    {
      "type": "pagefold",
      "id": "55c1b7414b39aa8a",
      "text": "a new issue.json"
    },
    {
      "type": "paragraph",
      "id": "080614a438162161",
      "text": "The current stancer-twfy gets its 'issues.json' from the [[stance-viewer-sinatra]] Github repo. This was just an interim measure to make sure everything was working as expected. This afternoon I fixed this to generate a new 'issues.json' file via the Morph API. "
    },
    {
      "type": "paragraph",
      "id": "650c008f8b605961",
      "text": "Generating it was fairly straightforward, other than having to make sure I was correctly converting the odd PublicWhip minority/majority approach to Stancer's more straightforward yes/no approach. For now I've done this simply as a simple lookup table that exhausts all options, to optimise for it being readable: [https://github.com/tmtmtmtm/stancer-twfy/blob/8d05b120468abfd29fb3d52d9be9618b5c7d2a24/bin/make_issues_json.rb code]"
    },
    {
      "type": "paragraph",
      "id": "0eb4a152478c09fb",
      "text": "The harder part was testing to make sure that the data was correct. Since I originally generated the first version, many months ago, new Policies have been created, more motions have been added to existing Policies, and, more trickily, some motions appear to have been removed from existing Policies and replaced by slightly different ones. (Or I did something wrong in my initial, pre-Morph scraping.) To make sure everything was fine, I hand-checked some of the additions, and all of the removals, and the new data correctly matches what's currently on PublicWhip."
    },
    {
      "type": "pagefold",
      "id": "d7a1e9e117d5c1f6",
      "text": "Done"
    },
    {
      "type": "paragraph",
      "id": "46a0239828604d9d",
      "text": "☑ Editor for existing Issue metadata (PW data only for now)"
    },
    {
      "type": "paragraph",
      "id": "8bf54ff05d386cc4",
      "text": "☑ Merge Richard's spreadsheet with PublicWhip data in API"
    },
    {
      "type": "paragraph",
      "id": "d88910fda324824c",
      "text": "☑ Add tests for API"
    },
    {
      "type": "paragraph",
      "id": "ceaeffeb49b11b0e",
      "text": "☑ Add combined data to Editor"
    },
    {
      "type": "paragraph",
      "id": "c73c37fdbe7c3ac6",
      "text": "☑ Generate new Issues.json via Morph"
    },
    {
      "type": "pagefold",
      "id": "7e03b2066ffc2424",
      "text": "Scratch"
    },
    {
      "type": "paragraph",
      "id": "8fd81a247394130c",
      "text": "As I always forget how to run an individual rake test:"
    },
    {
      "type": "code",
      "id": "13237e4a6a994ccf",
      "text": "rake test TEST=t/api.rb"
    },
    {
      "type": "paragraph",
      "id": "7f50da37ea2f8084",
      "text": "Asserting that something is greater than a given value:"
    },
    {
      "type": "code",
      "id": "e0c902c827bbbab6",
      "text": "array.size.must_be :>, 60"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2014-12-03 Notes",
        "story": []
      },
      "date": 1417604294655
    },
    {
      "item": {
        "type": "factory",
        "id": "d7a1e9e117d5c1f6"
      },
      "id": "d7a1e9e117d5c1f6",
      "type": "add",
      "date": 1417604296794
    },
    {
      "type": "edit",
      "id": "d7a1e9e117d5c1f6",
      "item": {
        "type": "pagefold",
        "id": "d7a1e9e117d5c1f6",
        "text": "Notes"
      },
      "date": 1417604301085
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "97996410c607d4d0",
        "text": "☐ Move inflation to a Transformer"
      },
      "after": "d7a1e9e117d5c1f6",
      "id": "97996410c607d4d0",
      "date": 1417604306434
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "2f352ae64483619d",
        "text": "☐ Push Transformer into [[Stancer]]"
      },
      "after": "97996410c607d4d0",
      "id": "2f352ae64483619d",
      "date": 1417604310716
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "46a0239828604d9d",
        "text": "☐ Issue Storage (rather than fetching raw from GitHub as data)"
      },
      "after": "d7a1e9e117d5c1f6",
      "id": "46a0239828604d9d",
      "date": 1417604314206
    },
    {
      "type": "edit",
      "id": "46a0239828604d9d",
      "item": {
        "type": "paragraph",
        "id": "46a0239828604d9d",
        "text": "☐ Issue Storage Editor"
      },
      "date": 1417604365737
    },
    {
      "type": "edit",
      "id": "46a0239828604d9d",
      "item": {
        "type": "paragraph",
        "id": "46a0239828604d9d",
        "text": "☐ Editor for existing Issues"
      },
      "date": 1417604394668
    },
    {
      "type": "remove",
      "id": "46a0239828604d9d",
      "date": 1417604459760
    },
    {
      "type": "remove",
      "id": "97996410c607d4d0",
      "date": 1417604461882
    },
    {
      "type": "remove",
      "id": "2f352ae64483619d",
      "date": 1417604463820
    },
    {
      "type": "edit",
      "id": "d7a1e9e117d5c1f6",
      "item": {
        "type": "pagefold",
        "id": "d7a1e9e117d5c1f6",
        "text": "Done"
      },
      "date": 1417604735110
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "46a0239828604d9d",
        "text": "☐ Editor for existing Issues"
      },
      "after": "d7a1e9e117d5c1f6",
      "id": "46a0239828604d9d",
      "date": 1417610216700
    },
    {
      "type": "edit",
      "id": "46a0239828604d9d",
      "item": {
        "type": "paragraph",
        "id": "46a0239828604d9d",
        "text": "☑ Editor for existing Issues"
      },
      "date": 1417610219836
    },
    {
      "type": "edit",
      "id": "46a0239828604d9d",
      "item": {
        "type": "paragraph",
        "id": "46a0239828604d9d",
        "text": "☑ Editor for existing Issues (PW data only for now)"
      },
      "date": 1417610232019
    },
    {
      "type": "edit",
      "id": "46a0239828604d9d",
      "item": {
        "type": "paragraph",
        "id": "46a0239828604d9d",
        "text": "☑ Editor for existing Issue metadata (PW data only for now)"
      },
      "date": 1417610246294
    },
    {
      "item": {
        "type": "factory",
        "id": "7e03b2066ffc2424"
      },
      "id": "7e03b2066ffc2424",
      "type": "add",
      "after": "46a0239828604d9d",
      "date": 1417611288571
    },
    {
      "type": "edit",
      "id": "7e03b2066ffc2424",
      "item": {
        "type": "pagefold",
        "id": "7e03b2066ffc2424",
        "text": "Scratch"
      },
      "date": 1417611295722
    },
    {
      "item": {
        "type": "factory",
        "id": "8fd81a247394130c"
      },
      "id": "8fd81a247394130c",
      "type": "add",
      "after": "7e03b2066ffc2424",
      "date": 1417611297960
    },
    {
      "type": "edit",
      "id": "8fd81a247394130c",
      "item": {
        "type": "paragraph",
        "id": "8fd81a247394130c",
        "text": "As I always forget how to run an individual rake test:"
      },
      "date": 1417611308633
    },
    {
      "item": {
        "type": "paragraph",
        "id": "5ef8a9269a502df6",
        "text": ""
      },
      "id": "5ef8a9269a502df6",
      "type": "add",
      "after": "8fd81a247394130c",
      "date": 1417611308642
    },
    {
      "type": "remove",
      "id": "5ef8a9269a502df6",
      "date": 1417611309122
    },
    {
      "item": {
        "type": "factory",
        "id": "13237e4a6a994ccf"
      },
      "id": "13237e4a6a994ccf",
      "type": "add",
      "after": "8fd81a247394130c",
      "date": 1417611314135
    },
    {
      "type": "edit",
      "id": "13237e4a6a994ccf",
      "item": {
        "type": "code",
        "id": "13237e4a6a994ccf",
        "text": "rake test TEST=t/api.rb"
      },
      "date": 1417611317969
    },
    {
      "item": {
        "type": "factory",
        "id": "7f50da37ea2f8084"
      },
      "id": "7f50da37ea2f8084",
      "type": "add",
      "after": "13237e4a6a994ccf",
      "date": 1417611526168
    },
    {
      "type": "edit",
      "id": "7f50da37ea2f8084",
      "item": {
        "type": "paragraph",
        "id": "7f50da37ea2f8084",
        "text": "Asserting that something is greater than a given value:"
      },
      "date": 1417611535370
    },
    {
      "item": {
        "type": "paragraph",
        "id": "d87e11a44dbfd16e",
        "text": ""
      },
      "id": "d87e11a44dbfd16e",
      "type": "add",
      "after": "7f50da37ea2f8084",
      "date": 1417611535379
    },
    {
      "item": {
        "type": "factory",
        "id": "9bb9d4baaa49b462"
      },
      "id": "9bb9d4baaa49b462",
      "type": "add",
      "after": "d87e11a44dbfd16e",
      "date": 1417611536774
    },
    {
      "type": "remove",
      "id": "d87e11a44dbfd16e",
      "date": 1417611538197
    },
    {
      "type": "remove",
      "id": "9bb9d4baaa49b462",
      "date": 1417611541383
    },
    {
      "item": {
        "type": "factory",
        "id": "e0c902c827bbbab6"
      },
      "id": "e0c902c827bbbab6",
      "type": "add",
      "after": "7f50da37ea2f8084",
      "date": 1417611554794
    },
    {
      "type": "edit",
      "id": "e0c902c827bbbab6",
      "item": {
        "type": "code",
        "id": "e0c902c827bbbab6",
        "text": "array.size.must_be :>, 60"
      },
      "date": 1417611563837
    },
    {
      "item": {
        "type": "factory",
        "id": "b72b53dda6856d71"
      },
      "id": "b72b53dda6856d71",
      "type": "add",
      "after": "e0c902c827bbbab6",
      "date": 1417612933479
    },
    {
      "type": "move",
      "order": [
        "b72b53dda6856d71",
        "d7a1e9e117d5c1f6",
        "46a0239828604d9d",
        "7e03b2066ffc2424",
        "8fd81a247394130c",
        "13237e4a6a994ccf",
        "7f50da37ea2f8084",
        "e0c902c827bbbab6"
      ],
      "id": "b72b53dda6856d71",
      "date": 1417612936570
    },
    {
      "type": "edit",
      "id": "b72b53dda6856d71",
      "item": {
        "type": "paragraph",
        "id": "b72b53dda6856d71",
        "text": "The key task today was to consolidate the different Issue data into one source. Currently we scrape policy data from the [[Public Whip]] pseudo-API, but then also have Richard's spreadsheet of extended information. [[stance-viewer-sinatra]] handles each of these separately, so we want to combine that into one source."
      },
      "date": 1417613028278
    },
    {
      "item": {
        "type": "paragraph",
        "id": "2a52ac2a2d381a58",
        "text": ""
      },
      "id": "2a52ac2a2d381a58",
      "type": "add",
      "after": "b72b53dda6856d71",
      "date": 1417613028287
    },
    {
      "type": "edit",
      "id": "2a52ac2a2d381a58",
      "item": {
        "type": "paragraph",
        "id": "2a52ac2a2d381a58",
        "text": "To bootstrap that up, I'm having the new Issue API from yesterday simply read both when it's asked to serve them. We can then pre-fill those into the [[Bellagio Editor]]."
      },
      "date": 1417613136750
    },
    {
      "item": {
        "type": "paragraph",
        "id": "557cfd7ab3cf454f",
        "text": ""
      },
      "id": "557cfd7ab3cf454f",
      "type": "add",
      "after": "2a52ac2a2d381a58",
      "date": 1417613136758
    },
    {
      "type": "edit",
      "id": "557cfd7ab3cf454f",
      "item": {
        "type": "paragraph",
        "id": "557cfd7ab3cf454f",
        "text": "Once we decide where that will actually *store* any data, we can combine them properly and have the API read from the store instead."
      },
      "date": 1417613172074
    },
    {
      "item": {
        "type": "paragraph",
        "id": "b90b3b0c74cafad7",
        "text": ""
      },
      "id": "b90b3b0c74cafad7",
      "type": "add",
      "after": "557cfd7ab3cf454f",
      "date": 1417613292584
    },
    {
      "type": "edit",
      "id": "b90b3b0c74cafad7",
      "item": {
        "type": "paragraph",
        "id": "b90b3b0c74cafad7",
        "text": "This required tidying up how the CSV reading currently works (and editing my dump of the spreadsheet to have meaningful column names in the title row)"
      },
      "date": 1417613325381
    },
    {
      "type": "edit",
      "id": "b90b3b0c74cafad7",
      "item": {
        "type": "paragraph",
        "id": "b90b3b0c74cafad7",
        "text": "This required tidying up how the CSV reading currently works, hand-editing my dump of the spreadsheet to have meaningful column names in the title row, so we can refer to them by name, rather than position number, merging these in the API call, and writing tests for the API."
      },
      "date": 1417613632219
    },
    {
      "type": "edit",
      "id": "b90b3b0c74cafad7",
      "item": {
        "type": "paragraph",
        "id": "b90b3b0c74cafad7",
        "text": "This required tidying up how the CSV reading currently works, hand-editing my dump of the spreadsheet to have meaningful column names in the title row, so we can refer to them by name, rather than position number, merging these in the API call, and creating some tests for the API (which I should really have done yesterday)."
      },
      "date": 1417613656128
    },
    {
      "item": {
        "type": "paragraph",
        "id": "dc3ceb6655affaf1",
        "text": ""
      },
      "id": "dc3ceb6655affaf1",
      "type": "add",
      "after": "46a0239828604d9d",
      "date": 1417614353302
    },
    {
      "type": "edit",
      "id": "dc3ceb6655affaf1",
      "item": {
        "type": "paragraph",
        "id": "dc3ceb6655affaf1",
        "text": "☑ Add combined data to API"
      },
      "date": 1417614360212
    },
    {
      "item": {
        "type": "paragraph",
        "id": "d88910fda324824c",
        "text": ""
      },
      "id": "d88910fda324824c",
      "type": "add",
      "after": "dc3ceb6655affaf1",
      "date": 1417614366921
    },
    {
      "type": "edit",
      "id": "d88910fda324824c",
      "item": {
        "type": "paragraph",
        "id": "d88910fda324824c",
        "text": "☑ Add tests for API"
      },
      "date": 1417614377404
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "8bf54ff05d386cc4",
        "text": "☐ Merge Richard's spreadsheet with PublicWhip data in API"
      },
      "after": "46a0239828604d9d",
      "id": "8bf54ff05d386cc4",
      "date": 1417615493717
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "ceaeffeb49b11b0e",
        "text": "☐ Add combined data to Editor"
      },
      "after": "d88910fda324824c",
      "id": "ceaeffeb49b11b0e",
      "date": 1417615498384
    },
    {
      "type": "remove",
      "id": "dc3ceb6655affaf1",
      "date": 1417615507036
    },
    {
      "type": "edit",
      "id": "8bf54ff05d386cc4",
      "item": {
        "type": "paragraph",
        "id": "8bf54ff05d386cc4",
        "text": "☑ Merge Richard's spreadsheet with PublicWhip data in API"
      },
      "date": 1417615511166
    },
    {
      "type": "edit",
      "id": "ceaeffeb49b11b0e",
      "item": {
        "type": "paragraph",
        "id": "ceaeffeb49b11b0e",
        "text": "☑ Add combined data to Editor"
      },
      "date": 1417615513927
    },
    {
      "item": {
        "type": "paragraph",
        "id": "a7164d4e768c5a60",
        "text": ""
      },
      "id": "a7164d4e768c5a60",
      "type": "add",
      "after": "b90b3b0c74cafad7",
      "date": 1417618607585
    },
    {
      "type": "edit",
      "id": "a7164d4e768c5a60",
      "item": {
        "type": "paragraph",
        "id": "a7164d4e768c5a60",
        "text": "I also had a brief look at automatically populating the existing Indicators, but hit a couple of snags. Firstly the current Issues file only includes IDs, rather than titles. (We could fix this either by regenerating the file with more info, or add a call to use the Morph API to look that up.) Secondly, the jQuery to populate this part of the form assumes the user clicking buttons etc. We could probably simulate those clicks, but it would presumably be better to refactor that code first so that both approaches could do the same thing. And finally, the current Indicator info — from either source — doesn't neatly tell us whether it should be attached as For/Against or Strong/Weak. Again, we could fix this, but this is a lot of fixes for something we're not sure we're going to use yet, and I think some of the other changes required over the next couple of days would make some of this better anyway. So I'm deferring this part for a while."
      },
      "date": 1417618937132
    },
    {
      "item": {
        "type": "paragraph",
        "id": "c79c1106bea4a418",
        "text": ""
      },
      "id": "c79c1106bea4a418",
      "type": "add",
      "after": "a7164d4e768c5a60",
      "date": 1417618937155
    },
    {
      "type": "remove",
      "id": "c79c1106bea4a418",
      "date": 1417618970759
    },
    {
      "type": "edit",
      "id": "b72b53dda6856d71",
      "item": {
        "type": "paragraph",
        "id": "b72b53dda6856d71",
        "text": "The first task today was to consolidate the different Issue data into one source. Currently we scrape policy data from the [[Public Whip]] pseudo-API, but then also have Richard's spreadsheet of extended information. [[stance-viewer-sinatra]] handles each of these separately, so we want to combine that into one source."
      },
      "date": 1417625051745
    },
    {
      "item": {
        "type": "factory",
        "id": "16b2faf14b92230f"
      },
      "id": "16b2faf14b92230f",
      "type": "add",
      "after": "e0c902c827bbbab6",
      "date": 1417625058445
    },
    {
      "type": "move",
      "order": [
        "16b2faf14b92230f",
        "b72b53dda6856d71",
        "2a52ac2a2d381a58",
        "557cfd7ab3cf454f",
        "b90b3b0c74cafad7",
        "a7164d4e768c5a60",
        "d7a1e9e117d5c1f6",
        "46a0239828604d9d",
        "8bf54ff05d386cc4",
        "d88910fda324824c",
        "ceaeffeb49b11b0e",
        "7e03b2066ffc2424",
        "8fd81a247394130c",
        "13237e4a6a994ccf",
        "7f50da37ea2f8084",
        "e0c902c827bbbab6"
      ],
      "id": "16b2faf14b92230f",
      "date": 1417625066476
    },
    {
      "type": "edit",
      "id": "16b2faf14b92230f",
      "item": {
        "type": "paragraph",
        "id": "16b2faf14b92230f",
        "text": "Consolidated Issue Data"
      },
      "date": 1417625076329
    },
    {
      "type": "remove",
      "id": "16b2faf14b92230f",
      "date": 1417625079214
    },
    {
      "item": {
        "type": "factory",
        "id": "293b88a0da0a1f30"
      },
      "id": "293b88a0da0a1f30",
      "type": "add",
      "after": "e0c902c827bbbab6",
      "date": 1417625081280
    },
    {
      "type": "edit",
      "id": "293b88a0da0a1f30",
      "item": {
        "type": "pagefold",
        "id": "293b88a0da0a1f30",
        "text": "Consolidated Issue Data"
      },
      "date": 1417625084929
    },
    {
      "type": "move",
      "order": [
        "293b88a0da0a1f30",
        "b72b53dda6856d71",
        "2a52ac2a2d381a58",
        "557cfd7ab3cf454f",
        "b90b3b0c74cafad7",
        "a7164d4e768c5a60",
        "d7a1e9e117d5c1f6",
        "46a0239828604d9d",
        "8bf54ff05d386cc4",
        "d88910fda324824c",
        "ceaeffeb49b11b0e",
        "7e03b2066ffc2424",
        "8fd81a247394130c",
        "13237e4a6a994ccf",
        "7f50da37ea2f8084",
        "e0c902c827bbbab6"
      ],
      "id": "293b88a0da0a1f30",
      "date": 1417625090290
    },
    {
      "item": {
        "type": "factory",
        "id": "55c1b7414b39aa8a"
      },
      "id": "55c1b7414b39aa8a",
      "type": "add",
      "after": "e0c902c827bbbab6",
      "date": 1417625093483
    },
    {
      "type": "move",
      "order": [
        "293b88a0da0a1f30",
        "b72b53dda6856d71",
        "2a52ac2a2d381a58",
        "557cfd7ab3cf454f",
        "b90b3b0c74cafad7",
        "a7164d4e768c5a60",
        "55c1b7414b39aa8a",
        "d7a1e9e117d5c1f6",
        "46a0239828604d9d",
        "8bf54ff05d386cc4",
        "d88910fda324824c",
        "ceaeffeb49b11b0e",
        "7e03b2066ffc2424",
        "8fd81a247394130c",
        "13237e4a6a994ccf",
        "7f50da37ea2f8084",
        "e0c902c827bbbab6"
      ],
      "id": "55c1b7414b39aa8a",
      "date": 1417625102299
    },
    {
      "type": "edit",
      "id": "55c1b7414b39aa8a",
      "item": {
        "type": "pagefold",
        "id": "55c1b7414b39aa8a",
        "text": "a new issue.json"
      },
      "date": 1417625120828
    },
    {
      "item": {
        "type": "factory",
        "id": "080614a438162161"
      },
      "id": "080614a438162161",
      "type": "add",
      "after": "e0c902c827bbbab6",
      "date": 1417625125161
    },
    {
      "type": "move",
      "order": [
        "293b88a0da0a1f30",
        "b72b53dda6856d71",
        "2a52ac2a2d381a58",
        "557cfd7ab3cf454f",
        "b90b3b0c74cafad7",
        "a7164d4e768c5a60",
        "55c1b7414b39aa8a",
        "080614a438162161",
        "d7a1e9e117d5c1f6",
        "46a0239828604d9d",
        "8bf54ff05d386cc4",
        "d88910fda324824c",
        "ceaeffeb49b11b0e",
        "7e03b2066ffc2424",
        "8fd81a247394130c",
        "13237e4a6a994ccf",
        "7f50da37ea2f8084",
        "e0c902c827bbbab6"
      ],
      "id": "080614a438162161",
      "date": 1417625126935
    },
    {
      "type": "edit",
      "id": "080614a438162161",
      "item": {
        "type": "paragraph",
        "id": "080614a438162161",
        "text": "The current stancer-twfy gets its 'issues.json' from the [[stance-viewer-sinatra]] Github repo. This was just an interim measure to make sure everything was working as expected. This afternoon I fixed this to generate a new 'issues.json' file via the Morph API. "
      },
      "date": 1417625219493
    },
    {
      "item": {
        "type": "paragraph",
        "id": "c73c37fdbe7c3ac6",
        "text": ""
      },
      "id": "c73c37fdbe7c3ac6",
      "type": "add",
      "after": "ceaeffeb49b11b0e",
      "date": 1417625249546
    },
    {
      "type": "edit",
      "id": "c73c37fdbe7c3ac6",
      "item": {
        "type": "paragraph",
        "id": "c73c37fdbe7c3ac6",
        "text": "☑ Generate new Issues.json via Morph"
      },
      "date": 1417625259925
    },
    {
      "item": {
        "type": "paragraph",
        "id": "650c008f8b605961",
        "text": ""
      },
      "id": "650c008f8b605961",
      "type": "add",
      "after": "080614a438162161",
      "date": 1417625309796
    },
    {
      "type": "edit",
      "id": "650c008f8b605961",
      "item": {
        "type": "paragraph",
        "id": "650c008f8b605961",
        "text": "Generating it was fairly simple. The hard part was testing to make sure that the data was correct. Since I originally generated the first version, many months ago, new Policies have been created, more motions have been added to existing Policies, and, more trickily, some motions appear to have been removed from existing Policies and replaced by slightly different ones. (Or I did something wrong in my initial, pre-Morph scraping.) To make sure everything was fine, I hand-checked some of the additions, and all of the removals, and the new data correctly matches what's currently on PublicWhip."
      },
      "date": 1417625448342
    },
    {
      "item": {
        "type": "paragraph",
        "id": "8a2655b34cbff60a",
        "text": ""
      },
      "id": "8a2655b34cbff60a",
      "type": "add",
      "after": "650c008f8b605961",
      "date": 1417625520260
    },
    {
      "type": "remove",
      "id": "8a2655b34cbff60a",
      "date": 1417625553102
    },
    {
      "type": "edit",
      "id": "650c008f8b605961",
      "item": {
        "type": "paragraph",
        "id": "650c008f8b605961",
        "text": "Generating it was fairly simple, other than having to make sure I was correctly converting the odd PublicWhip minority/majority approach to Stancer's more straightforward yes/no approach. For now I've done this simply as a simple lookup table that exhausts all options, to optimise for it being readable. "
      },
      "date": 1417625730879
    },
    {
      "item": {
        "type": "paragraph",
        "id": "0eb4a152478c09fb",
        "text": "The harder part was testing to make sure that the data was correct. Since I originally generated the first version, many months ago, new Policies have been created, more motions have been added to existing Policies, and, more trickily, some motions appear to have been removed from existing Policies and replaced by slightly different ones. (Or I did something wrong in my initial, pre-Morph scraping.) To make sure everything was fine, I hand-checked some of the additions, and all of the removals, and the new data correctly matches what's currently on PublicWhip."
      },
      "id": "0eb4a152478c09fb",
      "type": "add",
      "after": "650c008f8b605961",
      "date": 1417625730902
    },
    {
      "type": "edit",
      "id": "650c008f8b605961",
      "item": {
        "type": "paragraph",
        "id": "650c008f8b605961",
        "text": "Generating it was fairly straightforward, other than having to make sure I was correctly converting the odd PublicWhip minority/majority approach to Stancer's more straightforward yes/no approach. For now I've done this simply as a simple lookup table that exhausts all options, to optimise for it being readable. "
      },
      "date": 1417626973981
    },
    {
      "type": "edit",
      "id": "650c008f8b605961",
      "item": {
        "type": "paragraph",
        "id": "650c008f8b605961",
        "text": "Generating it was fairly straightforward, other than having to make sure I was correctly converting the odd PublicWhip minority/majority approach to Stancer's more straightforward yes/no approach. For now I've done this simply as a simple lookup table that exhausts all options, to optimise for it being readable: [https://github.com/tmtmtmtm/stancer-twfy/blob/8d05b120468abfd29fb3d52d9be9618b5c7d2a24/bin/make_issues_json.rb code]"
      },
      "date": 1417627077256
    },
    {
      "type": "edit",
      "id": "a7164d4e768c5a60",
      "item": {
        "type": "paragraph",
        "id": "a7164d4e768c5a60",
        "text": "I also had a brief look at automatically populating the existing Indicators, but hit a couple of snags. Firstly the current Issues file only includes IDs, rather than titles. (We could fix this either by regenerating the file with more info, or add a call to use the Morph API to look that up.) Secondly, the jQuery to populate this part of the form assumes the user clicking buttons etc. We could probably simulate those clicks, but it would presumably be better to refactor that code first so that we could just call it from either approach. And finally, the current Indicator info — from either source — doesn't neatly tell us whether it should be attached as For/Against or Strong/Weak. Again, we could fix this, but this is a lot of fixes for something we're not sure we're going to use yet, and I think some of the other changes required over the next couple of days would make some of this better anyway. So I'm deferring this part for a while."
      },
      "date": 1417627197074
    }
  ]
}