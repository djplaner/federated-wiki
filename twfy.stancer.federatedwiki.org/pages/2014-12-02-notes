{
  "title": "2014-12-02 Notes",
  "story": [
    {
      "type": "paragraph",
      "id": "57217426a8a32e64",
      "text": "First thing to do today: ensure that the Stancer JSON being generated from the [[Morph.io]] PW data is the same as that generated the old way. (See scratch notes below.)"
    },
    {
      "type": "paragraph",
      "id": "54c76cb407896c60",
      "text": ""
    },
    {
      "type": "paragraph",
      "id": "bf2fed3df1923471",
      "text": "Comparing Stances for individual MPs is a little trickier, as I'm now generating these keyed against actual IDs for MPs, rather than the pseudo IDs I generated when I first scraped Public Whip myself. (Public Whip uses a combination of MP name and constituency as an ID in most cases, but I wanted the same person to always have the same ID, even if they changed constituency. I did this purely by name, and hand-munged the cases where there are more than one MP with the same name. This 'worked', but isn't good.) I'll probably need to write something at some stage to convert between these again, but for now I'm going to punt on it, and presume the data is the same for all the cases I haven't eyeballed, and correct later if necessary. It's obviously important that published stances are correct, but for development of the other parts of the system it doesn't matter that much if the source data is wrong."
    },
    {
      "type": "paragraph",
      "id": "4fd968c51ef93bda",
      "text": "Much of the middle of today was taken up by unrelated things, but this afternoon I took another couple of steps towards having a better storage mechanism for Issues."
    },
    {
      "type": "paragraph",
      "id": "10be35c4e1e18325",
      "text": "Currently we have the active Policy ids hardcoded as a PHP list (and thus need to make a code change every time we add a new Policy). As part of extending the information we display, Richard has also created a spreadsheet with extra information on each Policy. Currently the only place that's available is as a one-off CSV file I exported it to, and use in [[stance-viewer-sinatra]]. So I want to combine both of these, use the [[Bellagio Editor]] for editing them, and expose them over an API."
    },
    {
      "type": "paragraph",
      "id": "d408711a4acbabde",
      "text": "(NB: This is a separate issue from using that as a replacement for the [[Public Whip Policy Editor]]. This could be used for creating/maintaining the meta-information around each Issue, even if the information on which Indicators make up each Issue are still created/maintained on [[Public Whip]])"
    },
    {
      "type": "paragraph",
      "id": "4113777673cd6ef2",
      "text": "I looked briefly at doing this as a new lightweight python-eve project on Heroku, but for simplicity I decided to just cram it into the existing [[stance-viewer-sinatra]]. This is the opposite direction to where I want to be going (which is to move as much processing as possible out of that project), but it should enable us to remove other things more quickly, and then we can work out the correct deployment approach for this part later."
    },
    {
      "type": "factory",
      "id": "b6ecc30640f0cd36"
    },
    {
      "type": "paragraph",
      "id": "8a2280375a88dfb5",
      "text": "Having the whole thing work off static HTML + jQuery goes against our normal progressive enhancement approach, but as this will be an admin-only function on most sites, and this is still in exploration mode, I'm taking the short-cut for now. "
    },
    {
      "type": "paragraph",
      "id": "b3afcd4cd5dfdc96",
      "text": "Next: feeding the data from an existing Issue into the Editor. "
    },
    {
      "type": "pagefold",
      "id": "b3244c9842b20b46",
      "text": "Notes"
    },
    {
      "type": "paragraph",
      "id": "912e09cd877980ab",
      "text": "☑ Check that new JSON matches old JSON"
    },
    {
      "type": "paragraph",
      "id": "97996410c607d4d0",
      "text": "☐ Move inflation to a Transformer"
    },
    {
      "type": "paragraph",
      "id": "2f352ae64483619d",
      "text": "☐ Push Transformer into [[Stancer]]"
    },
    {
      "type": "paragraph",
      "id": "46a0239828604d9d",
      "text": "☐ Issue Storage (rather than fetching raw from GitHub as data)"
    },
    {
      "type": "pagefold",
      "id": "52a6f5ee64f4ad61",
      "text": "Scratch"
    },
    {
      "type": "paragraph",
      "id": "3f1d992cd0f85a80",
      "text": "Generate party stances (from uninstalled development Stancer), and compare them with the previous ones:"
    },
    {
      "type": "code",
      "id": "2805d41635bf6091",
      "text": "date; ruby -I../stancer/lib ./bin/generate_stances.rb group > tmp/party_stances.json; date\nbin/stances_json_to_csv tmp/party_stances.json |sort > tmp/party_stances_new.csv\nbin/stances_json_to_csv ~/Code/stance-viewer-sinatra/data/partystances.json | sort > tmp/party_stances_old.csv\ndiff tmp/party_stances_old.csv tmp/party_stances_new.csv | less\n"
    },
    {
      "type": "paragraph",
      "id": "90d9fba2fd0e02d3",
      "text": "stances_json_to_csv = [https://gist.github.com/tmtmtmtm/e2fe7e52a35ac57e3d8f https://gist.github.com/tmtmtmtm/e2fe7e52a35ac57e3d8f]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2014-12-02 Notes",
        "story": []
      },
      "date": 1417513368986
    },
    {
      "item": {
        "type": "factory",
        "id": "b3244c9842b20b46"
      },
      "id": "b3244c9842b20b46",
      "type": "add",
      "date": 1417513380544
    },
    {
      "type": "edit",
      "id": "b3244c9842b20b46",
      "item": {
        "type": "pagefold",
        "id": "b3244c9842b20b46",
        "text": "Notes"
      },
      "date": 1417513393043
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "912e09cd877980ab",
        "text": "☐ Move inflation to a Transformer"
      },
      "after": "b3244c9842b20b46",
      "id": "912e09cd877980ab",
      "date": 1417513398233
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "2f352ae64483619d",
        "text": "☐ Push Transformer into [[Stancer]]"
      },
      "after": "912e09cd877980ab",
      "id": "2f352ae64483619d",
      "date": 1417513401206
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "46a0239828604d9d",
        "text": "☐ Issue Storage (rather than fetching raw from GitHub as data)"
      },
      "after": "2f352ae64483619d",
      "id": "46a0239828604d9d",
      "date": 1417513405355
    },
    {
      "item": {
        "type": "paragraph",
        "id": "97996410c607d4d0",
        "text": "☐ Move inflation to a Transformer"
      },
      "id": "97996410c607d4d0",
      "type": "add",
      "after": "912e09cd877980ab",
      "date": 1417513412392
    },
    {
      "type": "edit",
      "id": "912e09cd877980ab",
      "item": {
        "type": "paragraph",
        "id": "912e09cd877980ab",
        "text": "☐ Check that new JSON matches old JSON"
      },
      "date": 1417513434855
    },
    {
      "item": {
        "type": "factory",
        "id": "52a6f5ee64f4ad61"
      },
      "id": "52a6f5ee64f4ad61",
      "type": "add",
      "after": "46a0239828604d9d",
      "date": 1417514441582
    },
    {
      "type": "edit",
      "id": "52a6f5ee64f4ad61",
      "item": {
        "type": "pagefold",
        "id": "52a6f5ee64f4ad61",
        "text": "Scratch"
      },
      "date": 1417514448539
    },
    {
      "item": {
        "type": "factory",
        "id": "3f1d992cd0f85a80"
      },
      "id": "3f1d992cd0f85a80",
      "type": "add",
      "after": "52a6f5ee64f4ad61",
      "date": 1417514450680
    },
    {
      "type": "edit",
      "id": "3f1d992cd0f85a80",
      "item": {
        "type": "paragraph",
        "id": "3f1d992cd0f85a80",
        "text": "Generating stances (without Stancer installed):"
      },
      "date": 1417514476867
    },
    {
      "item": {
        "type": "paragraph",
        "id": "aec43d929d8e8a02",
        "text": ""
      },
      "id": "aec43d929d8e8a02",
      "type": "add",
      "after": "3f1d992cd0f85a80",
      "date": 1417514476883
    },
    {
      "type": "remove",
      "id": "aec43d929d8e8a02",
      "date": 1417514486064
    },
    {
      "item": {
        "type": "factory",
        "id": "4d8b05179708a746"
      },
      "id": "4d8b05179708a746",
      "type": "add",
      "after": "3f1d992cd0f85a80",
      "date": 1417514496305
    },
    {
      "type": "edit",
      "id": "4d8b05179708a746",
      "item": {
        "type": "paragraph",
        "id": "4d8b05179708a746",
        "text": "> date; ruby -I../stancer/lib ./bin/generate_stances.rb voter > tmp/people_stances.json; date"
      },
      "date": 1417514510175
    },
    {
      "type": "remove",
      "id": "4d8b05179708a746",
      "date": 1417514577511
    },
    {
      "item": {
        "type": "factory",
        "id": "2805d41635bf6091"
      },
      "id": "2805d41635bf6091",
      "type": "add",
      "after": "3f1d992cd0f85a80",
      "date": 1417514578556
    },
    {
      "type": "edit",
      "id": "2805d41635bf6091",
      "item": {
        "type": "code",
        "id": "2805d41635bf6091",
        "text": "date; ruby -I../stancer/lib ./bin/generate_stances.rb voter > tmp/people_stances.json; date"
      },
      "date": 1417514587960
    },
    {
      "type": "edit",
      "id": "3f1d992cd0f85a80",
      "item": {
        "type": "paragraph",
        "id": "3f1d992cd0f85a80",
        "text": "Generating stances (from uninstalled development Stancer):"
      },
      "date": 1417514630197
    },
    {
      "type": "edit",
      "id": "3f1d992cd0f85a80",
      "item": {
        "type": "paragraph",
        "id": "3f1d992cd0f85a80",
        "text": "Generate party stances (from uninstalled development Stancer), and compare them with the previous ones:"
      },
      "date": 1417515154221
    },
    {
      "type": "edit",
      "id": "2805d41635bf6091",
      "item": {
        "type": "code",
        "id": "2805d41635bf6091",
        "text": "date; ruby -I../stancer/lib ./bin/generate_stances.rb group > tmp/party_stances.json; date\nbin/stances_jscon_to_csv tmp/party_stances.json |sort > tmp/party_stances_new.csv\nbin/stances_jscon_to_csv ~/Code/stance-viewer-sinatra/data/partystances.json | sort > tmp/party_stances_old.csv\ndiff tmp/party_stances_old.csv tmp/party_stances_new.csv | less\n"
      },
      "date": 1417515176521
    },
    {
      "item": {
        "type": "factory",
        "id": "57217426a8a32e64"
      },
      "id": "57217426a8a32e64",
      "type": "add",
      "after": "2805d41635bf6091",
      "date": 1417515186529
    },
    {
      "type": "move",
      "order": [
        "57217426a8a32e64",
        "b3244c9842b20b46",
        "912e09cd877980ab",
        "97996410c607d4d0",
        "2f352ae64483619d",
        "46a0239828604d9d",
        "52a6f5ee64f4ad61",
        "3f1d992cd0f85a80",
        "2805d41635bf6091"
      ],
      "id": "57217426a8a32e64",
      "date": 1417515190517
    },
    {
      "type": "edit",
      "id": "57217426a8a32e64",
      "item": {
        "type": "paragraph",
        "id": "57217426a8a32e64",
        "text": "First thing to do today: ensure that the Stancer JSON being generated from the [[Morph.io]] PW data is the same as that generated the old way. (See scratch notes below.)"
      },
      "date": 1417515243430
    },
    {
      "item": {
        "type": "paragraph",
        "id": "54c76cb407896c60",
        "text": ""
      },
      "id": "54c76cb407896c60",
      "type": "add",
      "after": "57217426a8a32e64",
      "date": 1417515243438
    },
    {
      "item": {
        "type": "paragraph",
        "id": "bf2fed3df1923471",
        "text": ""
      },
      "id": "bf2fed3df1923471",
      "type": "add",
      "after": "54c76cb407896c60",
      "date": 1417515362436
    },
    {
      "type": "edit",
      "id": "bf2fed3df1923471",
      "item": {
        "type": "paragraph",
        "id": "bf2fed3df1923471",
        "text": "Comparing Stances for individual MPs is a little trickier, as I'm now generating these keyed against actual IDs for MPs, rather than the pseudo IDs I generated when I first scraped Public Whip myself. (Public Whip uses a combination of MP name and constituency as an ID in most cases, but I wanted the same person to always have the same ID, even if they changed constituency. I did this purely by name, and hand-munged the cases where there are more than one MP with the same name. This 'worked', but isn't good.) I'll probably need to write something at some stage to convert between these again, but for now I'm going to punt on it, and presume the data is the same for all the cases I haven't eyeballed, and correct later if necessary. It's obviously important that published stances are correct, but for development of the other parts of the system it doesn't matter that much if the source data is wrong."
      },
      "date": 1417515745157
    },
    {
      "type": "edit",
      "id": "912e09cd877980ab",
      "item": {
        "type": "paragraph",
        "id": "912e09cd877980ab",
        "text": "☑ Check that new JSON matches old JSON"
      },
      "date": 1417515771893
    },
    {
      "type": "edit",
      "id": "2805d41635bf6091",
      "item": {
        "type": "code",
        "id": "2805d41635bf6091",
        "text": "date; ruby -I../stancer/lib ./bin/generate_stances.rb group > tmp/party_stances.json; date\nbin/stances_json_to_csv tmp/party_stances.json |sort > tmp/party_stances_new.csv\nbin/stances_json_to_csv ~/Code/stance-viewer-sinatra/data/partystances.json | sort > tmp/party_stances_old.csv\ndiff tmp/party_stances_old.csv tmp/party_stances_new.csv | less\n"
      },
      "date": 1417517633875
    },
    {
      "item": {
        "type": "factory",
        "id": "90d9fba2fd0e02d3"
      },
      "id": "90d9fba2fd0e02d3",
      "type": "add",
      "after": "2805d41635bf6091",
      "date": 1417517641099
    },
    {
      "type": "edit",
      "id": "90d9fba2fd0e02d3",
      "item": {
        "type": "paragraph",
        "id": "90d9fba2fd0e02d3",
        "text": "stances_json_to_csv = [https://gist.github.com/tmtmtmtm/e2fe7e52a35ac57e3d8f https://gist.github.com/tmtmtmtm/e2fe7e52a35ac57e3d8f]"
      },
      "date": 1417517654287
    },
    {
      "item": {
        "type": "factory",
        "id": "4fd968c51ef93bda"
      },
      "id": "4fd968c51ef93bda",
      "type": "add",
      "after": "90d9fba2fd0e02d3",
      "date": 1417532222556
    },
    {
      "type": "move",
      "order": [
        "57217426a8a32e64",
        "54c76cb407896c60",
        "bf2fed3df1923471",
        "4fd968c51ef93bda",
        "b3244c9842b20b46",
        "912e09cd877980ab",
        "97996410c607d4d0",
        "2f352ae64483619d",
        "46a0239828604d9d",
        "52a6f5ee64f4ad61",
        "3f1d992cd0f85a80",
        "2805d41635bf6091",
        "90d9fba2fd0e02d3"
      ],
      "id": "4fd968c51ef93bda",
      "date": 1417532227942
    },
    {
      "type": "edit",
      "id": "4fd968c51ef93bda",
      "item": {
        "type": "paragraph",
        "id": "4fd968c51ef93bda",
        "text": "Much of the middle of today was taken up by unrelated things, but this afternoon I took another couple of steps towards having a better storage mechanism for Issues."
      },
      "date": 1417532294320
    },
    {
      "item": {
        "type": "paragraph",
        "id": "10be35c4e1e18325",
        "text": ""
      },
      "id": "10be35c4e1e18325",
      "type": "add",
      "after": "4fd968c51ef93bda",
      "date": 1417532294327
    },
    {
      "type": "edit",
      "id": "10be35c4e1e18325",
      "item": {
        "type": "paragraph",
        "id": "10be35c4e1e18325",
        "text": "Currently we have the active Policy ids hardcoded as a PHP list (and thus need to make a code change every time we add a new Policy). As part of extending the information we display, Richard has also created a spreadsheet with extra information on each Policy. Currently the only place that's available is as a one-off CSV file I exported it to, and use in [[stance-viewer-sinatra]]. So I want to combine both of these, use the [[Bellagio Editor]] for editing them, and expose them over an API."
      },
      "date": 1417532472055
    },
    {
      "item": {
        "type": "paragraph",
        "id": "4113777673cd6ef2",
        "text": ""
      },
      "id": "4113777673cd6ef2",
      "type": "add",
      "after": "10be35c4e1e18325",
      "date": 1417532472063
    },
    {
      "item": {
        "type": "paragraph",
        "id": "579731a415646e9c",
        "text": " as possible out of that project), but it should enable us to remove more other things quicker, and then we can work out the correct deployment approach for this part later."
      },
      "id": "579731a415646e9c",
      "type": "add",
      "after": "4113777673cd6ef2",
      "date": 1417532637955
    },
    {
      "type": "remove",
      "id": "579731a415646e9c",
      "date": 1417532640191
    },
    {
      "item": {
        "type": "paragraph",
        "id": "d408711a4acbabde",
        "text": ""
      },
      "id": "d408711a4acbabde",
      "type": "add",
      "after": "4113777673cd6ef2",
      "date": 1417532643194
    },
    {
      "type": "edit",
      "id": "d408711a4acbabde",
      "item": {
        "type": "paragraph",
        "id": "d408711a4acbabde",
        "text": "(NB: This is a separate issue from using that as a replacement for the [[Public Whip Policy Editor]]. This could be used for creating/maintaining the meta-information around each Issue, even if the information on which Indicators make up each Issue are still created/maintained on [[Public Whip]])"
      },
      "date": 1417532750453
    },
    {
      "item": {
        "type": "paragraph",
        "id": "2853ec8aff0f31cd",
        "text": ""
      },
      "id": "2853ec8aff0f31cd",
      "type": "add",
      "after": "d408711a4acbabde",
      "date": 1417532750460
    },
    {
      "type": "move",
      "order": [
        "57217426a8a32e64",
        "54c76cb407896c60",
        "bf2fed3df1923471",
        "4fd968c51ef93bda",
        "10be35c4e1e18325",
        "d408711a4acbabde",
        "4113777673cd6ef2",
        "2853ec8aff0f31cd",
        "b3244c9842b20b46",
        "912e09cd877980ab",
        "97996410c607d4d0",
        "2f352ae64483619d",
        "46a0239828604d9d",
        "52a6f5ee64f4ad61",
        "3f1d992cd0f85a80",
        "2805d41635bf6091",
        "90d9fba2fd0e02d3"
      ],
      "id": "d408711a4acbabde",
      "date": 1417532753238
    },
    {
      "type": "remove",
      "id": "2853ec8aff0f31cd",
      "date": 1417532756928
    },
    {
      "type": "edit",
      "id": "4113777673cd6ef2",
      "item": {
        "type": "paragraph",
        "id": "4113777673cd6ef2",
        "text": "I looked briefly at doing this as a new lightweight python-eve project on Heroku, but for simplicity I decided to just cram it into the existing [[stance-viewer-sinatra]]. This is the opposite direction to where I want to be going (which is to move as much processing as possible out of that project), but it should enable us to remove other things more quickly, and then we can work out the correct deployment approach for this part later."
      },
      "date": 1417533337300
    },
    {
      "item": {
        "type": "factory",
        "id": "b6ecc30640f0cd36"
      },
      "id": "b6ecc30640f0cd36",
      "type": "add",
      "after": "90d9fba2fd0e02d3",
      "date": 1417533544841
    },
    {
      "type": "move",
      "order": [
        "57217426a8a32e64",
        "54c76cb407896c60",
        "bf2fed3df1923471",
        "4fd968c51ef93bda",
        "10be35c4e1e18325",
        "d408711a4acbabde",
        "4113777673cd6ef2",
        "b6ecc30640f0cd36",
        "b3244c9842b20b46",
        "912e09cd877980ab",
        "97996410c607d4d0",
        "2f352ae64483619d",
        "46a0239828604d9d",
        "52a6f5ee64f4ad61",
        "3f1d992cd0f85a80",
        "2805d41635bf6091",
        "90d9fba2fd0e02d3"
      ],
      "id": "b6ecc30640f0cd36",
      "date": 1417533548948
    },
    {
      "item": {
        "type": "paragraph",
        "id": "8a2280375a88dfb5",
        "text": ""
      },
      "id": "8a2280375a88dfb5",
      "type": "add",
      "after": "b6ecc30640f0cd36",
      "date": 1417533656024
    },
    {
      "type": "edit",
      "id": "8a2280375a88dfb5",
      "item": {
        "type": "paragraph",
        "id": "8a2280375a88dfb5",
        "text": "Having the whole thing work off static HTML + jQuery goes against our normal progressive enhancement approach, but as this will be an admin-only function on most sites, and this is still in exploration mode, I'm taking the short-cut for now. "
      },
      "date": 1417533774523
    },
    {
      "item": {
        "type": "paragraph",
        "id": "b3afcd4cd5dfdc96",
        "text": ""
      },
      "id": "b3afcd4cd5dfdc96",
      "type": "add",
      "after": "8a2280375a88dfb5",
      "date": 1417533774532
    },
    {
      "type": "edit",
      "id": "b3afcd4cd5dfdc96",
      "item": {
        "type": "paragraph",
        "id": "b3afcd4cd5dfdc96",
        "text": "Next: feeding the data from an existing Issue into the Editor. "
      },
      "date": 1417533810642
    }
  ]
}